{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["WorkoutTracker","activeTab","setActiveTab","useState","workouts","setWorkouts","savedWorkouts","localStorage","getItem","JSON","parse","benchmarks","setBenchmarks","savedBenchmarks","pushups","start","current","pullups","squat","weight","newWorkout","setNewWorkout","date","Date","toISOString","split","day","getDayName","getDay","type","dayIndex","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","getWorkoutTypeForDay","exercises","currentExercise","setCurrentExercise","name","sets","reps","notes","workoutTemplates","useEffect","setItem","stringify","dayTemplate","prev","map","ex","handleTabChange","tab","handleDayChange","e","target","value","handleDateChange","handleExerciseChange","index","field","updatedExercises","[object Object]","handleSaveWorkout","workoutToSave","id","now","alert","handleUpdateBenchmark","metric","parseInt","React","createElement","className","onClick","Dashboard","calculateChange","calculatePercentage","Math","round","recentWorkouts","slice","length","workout","key","LogWorkout","onChange","readOnly","exercise","placeholder","History","Progress","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.b389136a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst WorkoutTracker = () => {\n  // State management\n  const [activeTab, setActiveTab] = useState('dashboard');\n  const [workouts, setWorkouts] = useState(() => {\n    const savedWorkouts = localStorage.getItem('workouts');\n    return savedWorkouts ? JSON.parse(savedWorkouts) : [];\n  });\n  const [benchmarks, setBenchmarks] = useState(() => {\n    const savedBenchmarks = localStorage.getItem('benchmarks');\n    return savedBenchmarks ? JSON.parse(savedBenchmarks) : {\n      pushups: { start: 20, current: 20 },\n      pullups: { start: 8, current: 8 },\n      squat: { start: 0, current: 0 },\n      weight: { start: 190, current: 190 }\n    };\n  });\n  const [newWorkout, setNewWorkout] = useState({\n    date: new Date().toISOString().split('T')[0],\n    day: getDayName(new Date().getDay()),\n    type: getWorkoutTypeForDay(new Date().getDay()),\n    exercises: []\n  });\n  const [currentExercise, setCurrentExercise] = useState({\n    name: '',\n    sets: '',\n    reps: '',\n    weight: '',\n    notes: ''\n  });\n\n  // Templates for workout days\n  const workoutTemplates = {\n    'Monday': {\n      type: 'Lower Body Focus + Core',\n      exercises: [\n        { name: 'Main Squat', sets: 4, reps: 8, weight: '', notes: '' },\n        { name: 'KB Romanian DL', sets: 3, reps: 10, weight: '', notes: '' },\n        { name: 'Reverse Lunges', sets: 3, reps: 8, weight: '', notes: '' },\n        { name: 'KB Step-ups', sets: 3, reps: 8, weight: '', notes: '' },\n        { name: 'Hanging Knee Raises', sets: 3, reps: 10, weight: '', notes: '' },\n        { name: 'Plank', sets: 3, reps: '30s', weight: '', notes: '' },\n        { name: 'Russian Twists', sets: 3, reps: 15, weight: '', notes: '' }\n      ]\n    },\n    'Tuesday': {\n      type: 'Gym Climbing Session',\n      exercises: [\n        { name: 'Warm-up', sets: '', reps: '', weight: '', notes: '' },\n        { name: 'Main Session', sets: '', reps: '', weight: '', notes: '' },\n        { name: 'Projects', sets: '', reps: '', weight: '', notes: '' }\n      ]\n    },\n    'Wednesday': {\n      type: 'Upper Body (Push emphasis)',\n      exercises: [\n        { name: 'Ring Push-ups', sets: 4, reps: 12, weight: '', notes: '' },\n        { name: 'Overhead Press', sets: 3, reps: 8, weight: '', notes: '' },\n        { name: 'Ring/Bench Dips', sets: 3, reps: 10, weight: '', notes: '' },\n        { name: 'DB Lateral Raises', sets: 3, reps: 12, weight: '', notes: '' },\n        { name: 'Face Pulls', sets: 3, reps: 15, weight: '', notes: '' },\n        { name: 'KB Halos', sets: 3, reps: 8, weight: '', notes: '' },\n        { name: 'Ring External Rotations', sets: 3, reps: 12, weight: '', notes: '' }\n      ]\n    },\n    'Thursday': {\n      type: 'Gym Climbing Session',\n      exercises: [\n        { name: 'Warm-up', sets: '', reps: '', weight: '', notes: '' },\n        { name: 'Main Session', sets: '', reps: '', weight: '', notes: '' },\n        { name: 'Projects', sets: '', reps: '', weight: '', notes: '' }\n      ]\n    },\n    'Friday': {\n      type: 'Full Body Circuit',\n      exercises: [\n        { name: 'KB Swings', sets: 3, reps: 12, weight: '', notes: '' },\n        { name: 'Goblet Squats', sets: 3, reps: 12, weight: '', notes: '' },\n        { name: 'Push-ups', sets: 3, reps: 12, weight: '', notes: '' },\n        { name: 'Med Ball Slams', sets: 3, reps: 10, weight: '', notes: '' },\n        { name: 'Step-ups', sets: 3, reps: 10, weight: '', notes: '' },\n        { name: 'Mountain Climbers', sets: 3, reps: 20, weight: '', notes: '' },\n        { name: 'Jump Rope Finisher', sets: 1, reps: '5 min', weight: '', notes: '' }\n      ]\n    }\n  };\n\n  // Helper functions\n  function getDayName(dayIndex) {\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    return days[dayIndex];\n  }\n\n  function getWorkoutTypeForDay(dayIndex) {\n    const day = getDayName(dayIndex);\n    // Default values for each day\n    const defaultTypes = {\n      'Monday': 'Lower Body Focus + Core',\n      'Tuesday': 'Gym Climbing Session',\n      'Wednesday': 'Upper Body (Push emphasis)',\n      'Thursday': 'Gym Climbing Session',\n      'Friday': 'Full Body Circuit',\n      'Saturday': 'Rest Day',\n      'Sunday': 'Rest Day'\n    };\n    return defaultTypes[day] || 'Rest Day';\n  }\n\n  // Save to localStorage whenever workouts or benchmarks change\n  useEffect(() => {\n    localStorage.setItem('workouts', JSON.stringify(workouts));\n  }, [workouts]);\n\n  useEffect(() => {\n    localStorage.setItem('benchmarks', JSON.stringify(benchmarks));\n  }, [benchmarks]);\n\n  // Load template for the selected day\n  useEffect(() => {\n    const dayTemplate = workoutTemplates[newWorkout.day];\n    if (dayTemplate) {\n      setNewWorkout(prev => ({\n        ...prev,\n        type: dayTemplate.type,\n        exercises: dayTemplate.exercises.map(ex => ({ ...ex }))\n      }));\n    } else {\n      setNewWorkout(prev => ({\n        ...prev,\n        type: 'Rest Day',\n        exercises: []\n      }));\n    }\n  }, [newWorkout.day]);\n\n  // Handlers\n  const handleTabChange = (tab) => {\n    setActiveTab(tab);\n  };\n\n  const handleDayChange = (e) => {\n    setNewWorkout(prev => ({\n      ...prev,\n      day: e.target.value\n    }));\n  };\n\n  const handleDateChange = (e) => {\n    setNewWorkout(prev => ({\n      ...prev,\n      date: e.target.value\n    }));\n  };\n\n  const handleExerciseChange = (index, field, value) => {\n    setNewWorkout(prev => {\n      const updatedExercises = [...prev.exercises];\n      updatedExercises[index] = {\n        ...updatedExercises[index],\n        [field]: value\n      };\n      return {\n        ...prev,\n        exercises: updatedExercises\n      };\n    });\n  };\n\n  const handleSaveWorkout = () => {\n    const workoutToSave = {\n      ...newWorkout,\n      id: Date.now()\n    };\n    setWorkouts(prev => [workoutToSave, ...prev]);\n    alert('Workout saved successfully!');\n  };\n\n  const handleUpdateBenchmark = (metric, value) => {\n    setBenchmarks(prev => ({\n      ...prev,\n      [metric]: {\n        ...prev[metric],\n        current: parseInt(value) || 0\n      }\n    }));\n  };\n\n  // Components\n  const Dashboard = () => {\n    const calculateChange = (start, current) => {\n      return current - start;\n    };\n\n    const calculatePercentage = (start, current) => {\n      if (start === 0) return '0%';\n      return `${Math.round((current - start) / start * 100)}%`;\n    };\n\n    const recentWorkouts = workouts.slice(0, 5);\n\n    return (\n      <div className=\"p-4\">\n        <h2 className=\"text-xl font-bold mb-4\">Dashboard</h2>\n        \n        <div className=\"bg-blue-50 p-4 rounded-lg shadow mb-6\">\n          <h3 className=\"font-semibold text-lg mb-2\">Progress Overview</h3>\n          <div className=\"overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead>\n                <tr className=\"bg-blue-100\">\n                  <th className=\"p-2 text-left\">Metric</th>\n                  <th className=\"p-2 text-right\">Starting</th>\n                  <th className=\"p-2 text-right\">Current</th>\n                  <th className=\"p-2 text-right\">Change</th>\n                  <th className=\"p-2 text-right\">%</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr className=\"border-b\">\n                  <td className=\"p-2\">Push-ups (max)</td>\n                  <td className=\"p-2 text-right\">{benchmarks.pushups.start}</td>\n                  <td className=\"p-2 text-right\">{benchmarks.pushups.current}</td>\n                  <td className=\"p-2 text-right\">{calculateChange(benchmarks.pushups.start, benchmarks.pushups.current)}</td>\n                  <td className=\"p-2 text-right\">{calculatePercentage(benchmarks.pushups.start, benchmarks.pushups.current)}</td>\n                </tr>\n                <tr className=\"border-b\">\n                  <td className=\"p-2\">Pull-ups (max)</td>\n                  <td className=\"p-2 text-right\">{benchmarks.pullups.start}</td>\n                  <td className=\"p-2 text-right\">{benchmarks.pullups.current}</td>\n                  <td className=\"p-2 text-right\">{calculateChange(benchmarks.pullups.start, benchmarks.pullups.current)}</td>\n                  <td className=\"p-2 text-right\">{calculatePercentage(benchmarks.pullups.start, benchmarks.pullups.current)}</td>\n                </tr>\n                <tr className=\"border-b\">\n                  <td className=\"p-2\">Squat 5RM</td>\n                  <td className=\"p-2 text-right\">{benchmarks.squat.start}</td>\n                  <td className=\"p-2 text-right\">{benchmarks.squat.current}</td>\n                  <td className=\"p-2 text-right\">{calculateChange(benchmarks.squat.start, benchmarks.squat.current)}</td>\n                  <td className=\"p-2 text-right\">{calculatePercentage(benchmarks.squat.start, benchmarks.squat.current)}</td>\n                </tr>\n                <tr>\n                  <td className=\"p-2\">Weight (lbs)</td>\n                  <td className=\"p-2 text-right\">{benchmarks.weight.start}</td>\n                  <td className=\"p-2 text-right\">{benchmarks.weight.current}</td>\n                  <td className=\"p-2 text-right\">{calculateChange(benchmarks.weight.start, benchmarks.weight.current)}</td>\n                  <td className=\"p-2 text-right\">{calculatePercentage(benchmarks.weight.start, benchmarks.weight.current)}</td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n        \n        <div className=\"bg-green-50 p-4 rounded-lg shadow mb-6\">\n          <h3 className=\"font-semibold text-lg mb-2\">Recent Workouts</h3>\n          {recentWorkouts.length === 0 ? (\n            <p className=\"text-gray-500 italic\">No workouts logged yet.</p>\n          ) : (\n            <div>\n              {recentWorkouts.map(workout => (\n                <div key={workout.id} className=\"mb-2 p-2 bg-white rounded border\">\n                  <div className=\"flex justify-between\">\n                    <span className=\"font-medium\">{workout.date} ({workout.day})</span>\n                    <span className=\"text-blue-600\">{workout.type}</span>\n                  </div>\n                  <div className=\"text-sm text-gray-600 mt-1\">\n                    {workout.exercises.length} exercises\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n        \n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n          <div className=\"bg-purple-50 p-4 rounded-lg shadow\">\n            <h3 className=\"font-semibold text-lg mb-2\">Weekly Schedule</h3>\n            <ul className=\"list-disc pl-5\">\n              <li className=\"mb-1\"><span className=\"font-medium\">Monday:</span> Lower Body Focus + Core</li>\n              <li className=\"mb-1\"><span className=\"font-medium\">Tuesday:</span> Gym Climbing Session</li>\n              <li className=\"mb-1\"><span className=\"font-medium\">Wednesday:</span> Upper Body (Push emphasis)</li>\n              <li className=\"mb-1\"><span className=\"font-medium\">Thursday:</span> Gym Climbing Session</li>\n              <li className=\"mb-1\"><span className=\"font-medium\">Friday:</span> Full Body Circuit</li>\n              <li className=\"mb-1\"><span className=\"font-medium\">Weekend:</span> Rest/Outdoor Activities</li>\n            </ul>\n          </div>\n          \n          <div className=\"bg-yellow-50 p-4 rounded-lg shadow\">\n            <h3 className=\"font-semibold text-lg mb-2\">Squat Progression Plan</h3>\n            <ul className=\"list-disc pl-5\">\n              <li className=\"mb-1\"><span className=\"font-medium\">Weeks 1-2:</span> Goblet squats (4×10)</li>\n              <li className=\"mb-1\"><span className=\"font-medium\">Weeks 3-4:</span> Front squats (4×8)</li>\n              <li className=\"mb-1\"><span className=\"font-medium\">Weeks 5-6:</span> Back squats (4×6-8)</li>\n              <li className=\"mb-1\"><span className=\"font-medium\">Weeks 7-8:</span> Deload and restart cycle</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const LogWorkout = () => {\n    return (\n      <div className=\"p-4\">\n        <h2 className=\"text-xl font-bold mb-4\">Log Workout</h2>\n        \n        <div className=\"bg-white p-4 rounded-lg shadow mb-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-4\">\n            <div>\n              <label className=\"block text-gray-700 mb-2\">Date</label>\n              <input \n                type=\"date\"\n                value={newWorkout.date}\n                onChange={handleDateChange}\n                className=\"w-full p-2 border rounded\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700 mb-2\">Day</label>\n              <select \n                value={newWorkout.day}\n                onChange={handleDayChange}\n                className=\"w-full p-2 border rounded\"\n              >\n                <option>Monday</option>\n                <option>Tuesday</option>\n                <option>Wednesday</option>\n                <option>Thursday</option>\n                <option>Friday</option>\n                <option>Saturday</option>\n                <option>Sunday</option>\n              </select>\n            </div>\n            <div>\n              <label className=\"block text-gray-700 mb-2\">Workout Type</label>\n              <input \n                type=\"text\"\n                value={newWorkout.type}\n                readOnly\n                className=\"w-full p-2 border rounded bg-gray-100\"\n              />\n            </div>\n          </div>\n          \n          <h3 className=\"font-semibold text-lg mb-2 mt-4\">Exercises</h3>\n          \n          {newWorkout.exercises.length === 0 ? (\n            <div className=\"italic text-gray-500 mb-4\">\n              No exercises for this day. Choose a different day or add exercises manually.\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <table className=\"w-full mb-4\">\n                <thead>\n                  <tr className=\"bg-gray-100\">\n                    <th className=\"p-2 text-left\">Exercise</th>\n                    <th className=\"p-2 text-center\">Sets</th>\n                    <th className=\"p-2 text-center\">Reps</th>\n                    <th className=\"p-2 text-center\">Weight</th>\n                    <th className=\"p-2 text-left\">Notes</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {newWorkout.exercises.map((exercise, index) => (\n                    <tr key={index} className=\"border-b\">\n                      <td className=\"p-2\">\n                        {exercise.name}\n                      </td>\n                      <td className=\"p-2\">\n                        <input\n                          type=\"text\"\n                          value={exercise.sets}\n                          onChange={(e) => handleExerciseChange(index, 'sets', e.target.value)}\n                          className=\"w-full p-1 border rounded text-center\"\n                        />\n                      </td>\n                      <td className=\"p-2\">\n                        <input\n                          type=\"text\"\n                          value={exercise.reps}\n                          onChange={(e) => handleExerciseChange(index, 'reps', e.target.value)}\n                          className=\"w-full p-1 border rounded text-center\"\n                        />\n                      </td>\n                      <td className=\"p-2\">\n                        <input\n                          type=\"text\"\n                          value={exercise.weight}\n                          onChange={(e) => handleExerciseChange(index, 'weight', e.target.value)}\n                          className=\"w-full p-1 border rounded text-center\"\n                          placeholder=\"lbs\"\n                        />\n                      </td>\n                      <td className=\"p-2\">\n                        <input\n                          type=\"text\"\n                          value={exercise.notes}\n                          onChange={(e) => handleExerciseChange(index, 'notes', e.target.value)}\n                          className=\"w-full p-1 border rounded\"\n                          placeholder=\"Notes\"\n                        />\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          )}\n          \n          <div className=\"flex justify-between items-center mt-4\">\n            <div className=\"text-sm text-gray-600\">\n              {newWorkout.exercises.length} exercises\n            </div>\n            <button \n              onClick={handleSaveWorkout}\n              className=\"bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\n            >\n              Save Workout\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  const History = () => {\n    return (\n      <div className=\"p-4\">\n        <h2 className=\"text-xl font-bold mb-4\">Workout History</h2>\n        \n        {workouts.length === 0 ? (\n          <div className=\"bg-white p-4 rounded-lg shadow\">\n            <p className=\"text-gray-500 italic\">No workouts logged yet.</p>\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {workouts.map(workout => (\n              <div key={workout.id} className=\"bg-white p-4 rounded-lg shadow\">\n                <div className=\"flex justify-between items-center mb-3\">\n                  <h3 className=\"font-semibold text-lg\">{workout.date} ({workout.day})</h3>\n                  <span className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm\">\n                    {workout.type}\n                  </span>\n                </div>\n                \n                <table className=\"w-full mb-2\">\n                  <thead>\n                    <tr className=\"bg-gray-50\">\n                      <th className=\"p-2 text-left\">Exercise</th>\n                      <th className=\"p-2 text-center\">Sets</th>\n                      <th className=\"p-2 text-center\">Reps</th>\n                      <th className=\"p-2 text-center\">Weight</th>\n                      <th className=\"p-2 text-left\">Notes</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {workout.exercises.map((exercise, index) => (\n                      <tr key={index} className=\"border-b\">\n                        <td className=\"p-2\">{exercise.name}</td>\n                        <td className=\"p-2 text-center\">{exercise.sets}</td>\n                        <td className=\"p-2 text-center\">{exercise.reps}</td>\n                        <td className=\"p-2 text-center\">{exercise.weight}</td>\n                        <td className=\"p-2\">{exercise.notes}</td>\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const Progress = () => {\n    return (\n      <div className=\"p-4\">\n        <h2 className=\"text-xl font-bold mb-4\">Progress Tracking</h2>\n        \n        <div className=\"bg-white p-4 rounded-lg shadow mb-6\">\n          <h3 className=\"font-semibold text-lg mb-3\">Update Benchmarks</h3>\n          \n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\n            <div>\n              <label className=\"block text-gray-700 mb-2\">Push-ups (max)</label>\n              <input \n                type=\"number\"\n                value={benchmarks.pushups.current}\n                onChange={(e) => handleUpdateBenchmark('pushups', e.target.value)}\n                className=\"w-full p-2 border rounded\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700 mb-2\">Pull-ups (max)</label>\n              <input \n                type=\"number\"\n                value={benchmarks.pullups.current}\n                onChange={(e) => handleUpdateBenchmark('pullups', e.target.value)}\n                className=\"w-full p-2 border rounded\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700 mb-2\">Squat 5RM (lbs)</label>\n              <input \n                type=\"number\"\n                value={benchmarks.squat.current}\n                onChange={(e) => handleUpdateBenchmark('squat', e.target.value)}\n                className=\"w-full p-2 border rounded\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700 mb-2\">Body Weight (lbs)</label>\n              <input \n                type=\"number\"\n                value={benchmarks.weight.current}\n                onChange={(e) => handleUpdateBenchmark('weight', e.target.value)}\n                className=\"w-full p-2 border rounded\"\n              />\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"bg-white p-4 rounded-lg shadow\">\n          <h3 className=\"font-semibold text-lg mb-3\">Starting Values</h3>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n            <div>\n              <label className=\"block text-gray-700 mb-2\">Push-ups (max)</label>\n              <input \n                type=\"number\"\n                value={benchmarks.pushups.start}\n                onChange={(e) => setBenchmarks(prev => ({\n                  ...prev,\n                  pushups: { ...prev.pushups, start: parseInt(e.target.value) || 0 }\n                }))}\n                className=\"w-full p-2 border rounded\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700 mb-2\">Pull-ups (max)</label>\n              <input \n                type=\"number\"\n                value={benchmarks.pullups.start}\n                onChange={(e) => setBenchmarks(prev => ({\n                  ...prev,\n                  pullups: { ...prev.pullups, start: parseInt(e.target.value) || 0 }\n                }))}\n                className=\"w-full p-2 border rounded\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700 mb-2\">Squat 5RM (lbs)</label>\n              <input \n                type=\"number\"\n                value={benchmarks.squat.start}\n                onChange={(e) => setBenchmarks(prev => ({\n                  ...prev,\n                  squat: { ...prev.squat, start: parseInt(e.target.value) || 0 }\n                }))}\n                className=\"w-full p-2 border rounded\"\n              />\n            </div>\n            <div>\n              <label className=\"block text-gray-700 mb-2\">Body Weight (lbs)</label>\n              <input \n                type=\"number\"\n                value={benchmarks.weight.start}\n                onChange={(e) => setBenchmarks(prev => ({\n                  ...prev,\n                  weight: { ...prev.weight, start: parseInt(e.target.value) || 0 }\n                }))}\n                className=\"w-full p-2 border rounded\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-gray-100\">\n      <header className=\"bg-blue-600 text-white p-4\">\n        <h1 className=\"text-2xl font-bold text-center\">Mountain Sports Workout Tracker</h1>\n      </header>\n      \n      <div className=\"flex overflow-hidden flex-1\">\n        <nav className=\"bg-gray-800 text-white w-full md:w-64 flex-shrink-0\">\n          <div className=\"flex md:block overflow-x-auto md:overflow-visible\">\n            <button \n              onClick={() => handleTabChange('dashboard')}\n              className={`block w-full text-left p-4 hover:bg-gray-700 ${activeTab === 'dashboard' ? 'bg-gray-700' : ''}`}\n            >\n              Dashboard\n            </button>\n            <button \n              onClick={() => handleTabChange('log')}\n              className={`block w-full text-left p-4 hover:bg-gray-700 ${activeTab === 'log' ? 'bg-gray-700' : ''}`}\n            >\n              Log Workout\n            </button>\n            <button \n              onClick={() => handleTabChange('history')}\n              className={`block w-full text-left p-4 hover:bg-gray-700 ${activeTab === 'history' ? 'bg-gray-700' : ''}`}\n            >\n              Workout History\n            </button>\n            <button \n              onClick={() => handleTabChange('progress')}\n              className={`block w-full text-left p-4 hover:bg-gray-700 ${activeTab === 'progress' ? 'bg-gray-700' : ''}`}\n            >\n              Progress Tracking\n            </button>\n          </div>\n        </nav>\n        \n        <main className=\"flex-1 overflow-auto\">\n          {activeTab === 'dashboard' && <Dashboard />}\n          {activeTab === 'log' && <LogWorkout />}\n          {activeTab === 'history' && <History />}\n          {activeTab === 'progress' && <Progress />}\n        </main>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkoutTracker;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}